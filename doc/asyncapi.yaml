asyncapi: '2.6.0'
info:
  title: Create an AsyncAPI document for dualzone api websocket
  version: '1.0.0'
  description: This is a sample server for a dualzone api websocket, you must be connected to campus VPN or run local docker image
servers:
  production:
    url: wss-primary.slack.com
    protocol: wss
    description: Slack's server in Socket Mode for real-time communication
channels:
  users/(userUUID):
    subscribe:
      description: List of all event related to a user
      message:
        oneOf:
          - $ref: '#/components/messages/groupCreated'
          - $ref: '#/components/messages/groupDeleted'
          - $ref: '#/components/messages/groupLeaderChanged'
          - $ref: '#/components/messages/groupMemberJoined'
          - $ref: '#/components/messages/groupMemberLeaved'
components:
  messages:
    groupCreated:
      summary: Send when a group is created
      payload:
        $ref: '#/components/schemas/groupBasics'
    groupDeleted:
      summary: Send when a group is deleted
      payload:
        $ref: '#/components/schemas/groupBasics'
    groupLeaderChanged:
      summary: Send when group leader is changed
      payload:
        $ref: '#/components/schemas/groupLeader'
    groupMemberJoined:
      summary: Send when member joined a group
      payload:
        $ref: '#/components/schemas/groupMember'
    groupMemberLeaved:
      summary: Send when member leaved a group
      payload:
        $ref: '#/components/schemas/groupMember'
  schemas:
    groupBasics:
      type: object
      properties:
        event:
          type: string
          enum:
            - groupCreated
            - groupDeleted
        data:
          type: object
          properties:
            groupId:
              type: string
    groupLeader:
      type: object
      properties:
        event:
          type: string
          enum:
            - groupLeaderChanged
        data:
          type: object
          properties:
            groupId:
              type: string
            leader:
              type: string
    groupMember:
      type: object
      properties:
        event:
          type: string
          enum:
            - groupMemberJoined
            - groupMemberLeaved
        data:
          type: object
          properties:
            groupId:
              type: string
            member:
              type: string


